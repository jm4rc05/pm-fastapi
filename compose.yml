version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - path: .env.local
        required: true
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - $PWD/postgres/config:/etc/postgresql:ro
      - $PWD/postgres/init:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - $PWD/redis/config/redis.conf:/usr/local/etc/redis/redis.conf:rw
    environment:
      REDIS_REPLICATION_MODE: master
      REDISCLI_AUTH: ${REDIS_PASSWORD}
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes"]
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
  app:
    container_name: app
    image: app/api:latest
    env_file:
      - path: .env.local
        required: true
    build:
      context: .
      dockerfile: api.dockerfile
      target: apibase
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '8000:8000'
